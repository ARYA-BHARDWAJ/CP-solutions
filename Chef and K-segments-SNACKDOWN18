#include<stdio.h>
#include<vector>
#include<algorithm>
#include <iostream>
#include <cmath>
#include <complex>
#include<queue>
#include <string>
#include<bits/stdc++.h>
#define pi 3.141592654
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);
//#define x real()
//#define y imag()
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef complex<double> point;
//template<typename T>T gcd(T x, T y) { if(y == 0)return x; else return gcd(y, x%y); }
//typedef bitset<21> mask;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//const double PI = acos(-1.0);
//const double EPS = 1e-9;
//typedef complex<double> point;
int t,n,k;
pair<int,int>a[100010];

int main()
{

//cout<<Pow((ll)1000000,(ll)110);a
//freopen("bye.in","r",stdin);
//freopen("math.in","w",stdout);
//    char input[15];
//    scanf("%s", &input);  array of char
//  gets(c+1);  array of char
input;
cin>>t;
while(t--)
{
    cin>>n>>k;
    forr(i,1,n)
        cin>>a[i].F>>a[i].S;

    sort(a+1,a+1+n);
    multiset<int>s;
    int ans=0;
    forr(i,1,n)
    {
        if(i<k)
        {
            s.insert(a[i].S);
        }
        else if(i==k)
        {
            s.insert(a[i].S);
            cout<<"s"<<*s.begin()<<"\n";
            ans=max(ans,*s.begin()-a[i].F);
        }
        else
        {
            s.insert(a[i].S);
            s.erase(*s.begin());
            cout<<"s"<<*s.begin()<<"\n";
            ans=max(ans,*s.begin()-a[i].F);


        }

        cout<<"a"<<ans<<"\n";
    }
    cout<<ans<<endl;


}
return 0;
}
